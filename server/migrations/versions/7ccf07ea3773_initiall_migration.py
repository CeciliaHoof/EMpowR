"""initiall migration

Revision ID: 7ccf07ea3773
Revises: 
Create Date: 2024-03-13 11:24:51.597481

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7ccf07ea3773'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('medications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('generic_name', sa.String(), nullable=True),
    sa.Column('brand_name', sa.String(), nullable=True),
    sa.Column('pharm_class', sa.String(), nullable=True),
    sa.Column('route', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('boxed_warning', sa.String(), nullable=True),
    sa.Column('indications_and_usage', sa.String(), nullable=True),
    sa.Column('dosage_and_administration', sa.String(), nullable=True),
    sa.Column('warnings_and_cautions', sa.String(), nullable=True),
    sa.Column('adverse_reactions', sa.String(), nullable=True),
    sa.Column('pregnancy', sa.String(), nullable=True),
    sa.Column('contraindications', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_medications'))
    )
    op.create_table('metric_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('metric_type', sa.String(), nullable=True),
    sa.Column('green_params', sa.Integer(), nullable=True),
    sa.Column('yellow_params_low', sa.Integer(), nullable=True),
    sa.Column('yellow_params_high', sa.Integer(), nullable=True),
    sa.Column('red_params_low', sa.Integer(), nullable=True),
    sa.Column('red_params_high', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_metric_types'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('_password_hash', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('health_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time_taken', sa.DateTime(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('metric_type_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['metric_type_id'], ['metric_types.id'], name=op.f('fk_health_metrics_metric_type_id_metric_types')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_health_metrics_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_health_metrics'))
    )
    op.create_table('prescriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dosage', sa.String(), nullable=False),
    sa.Column('frequency', sa.String(), nullable=False),
    sa.Column('route', sa.String(), nullable=False),
    sa.Column('time_of_day', sa.String(), nullable=False),
    sa.Column('prescribed_on', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('medication_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['medication_id'], ['medications.id'], name=op.f('fk_prescriptions_medication_id_medications')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_prescriptions_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_prescriptions'))
    )
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('severity', sa.String(), nullable=True),
    sa.Column('alert_type', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('health_metric_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['health_metric_id'], ['health_metrics.id'], name=op.f('fk_alerts_health_metric_id_health_metrics')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_alerts'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('alerts')
    op.drop_table('prescriptions')
    op.drop_table('health_metrics')
    op.drop_table('users')
    op.drop_table('metric_types')
    op.drop_table('medications')
    # ### end Alembic commands ###
